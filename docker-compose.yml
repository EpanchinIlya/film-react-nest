services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: film-react-nest:front
    container_name: frontend
    restart: unless-stopped
    volumes:
    - frontend_dist:/app/dist 
    networks:
    - webnet
    env_file:
    - ./frontend/.env
  


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: film-react-nest:backend
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
    networks:
      - webnet
    ports:
      - "3000:3000"


  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
     POSTGRES_DB: ${DATABASE_NAME}
     POSTGRES_USER: ${DATABASE_USERNAME}
     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    # ports:
    #   - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/test/prac.init02.sql:/docker-entrypoint-initdb.d/02.prac.init02.sql:ro
      - ./backend/test/prac.films.sql:/docker-entrypoint-initdb.d/03.prac.films.sql:ro
      - ./backend/test/prac.shedules.sql:/docker-entrypoint-initdb.d/04.prac.shedules.sql:ro

    env_file:
        - ./backend/.env
    networks:
    - webnet


  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: film-react-nest:nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/var/www/frontend:ro
    depends_on:
      - frontend
      - backend
    networks:
      - webnet




volumes:
  postgres_data:
  frontend_dist:

networks:
  webnet: {}